#! /bin/sh
# postinst script for file-rc
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <postinst> `configure' <most-recently-configured-version>
#        * <old-postinst> `abort-upgrade' <new version>
#        * <conflictor's-postinst> `abort-remove' `in-favour' <package>
#          <new-version>
#        * <deconfigured's-postinst> `abort-deconfigure' `in-favour'
#          <failed-install-package> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package
#
# quoting from the policy:
#     Any necessary prompting should almost always be confined to the
#     post-installation script, and should be protected with a conditional
#     so that unnecessary prompting doesn't happen if a package's
#     installation fails and the `postinst' is called with `abort-upgrade',
#     `abort-remove' or `abort-deconfigure'.

# Make sure insserv is in path
PATH=/sbin:$PATH

case "$1" in
    configure)
	if [ -x /sbin/insserv ] && [ ! -f /etc/runlevel.conf ]
	then
	    /usr/share/file-rc/insserv2file.sh > /etc/runlevel.conf
	    cp /etc/runlevel.conf /etc/runlevel.fallback
	    rm -rf /etc/rc[0-6S].d
	elif [ -d /etc/rc0.d ] && [ ! -f /etc/runlevel.conf ]
	then
	    /usr/share/file-rc/rclink2file.sh > /etc/runlevel.conf
	    cp /etc/runlevel.conf /etc/runlevel.fallback
	    ( cd / && tar czf /var/backups/rc-links.tar.gz etc/rc?.d )
	    rm -rf /etc/rc[0-6S].d
	fi
    ;;

    abort-upgrade|abort-remove|abort-deconfigure)
    ;;

    *)
        echo "postinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac


# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.



exit 0
